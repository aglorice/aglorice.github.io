<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>//</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>邓晓霞看这里</title>
    <url>//</url>
    <content><![CDATA[<p><img src="https://img-1310166437.cos.ap-chengdu.myqcloud.com/img/IMG_20220522_130549.jpg" alt="IMG_20220522_130549"></p>
<h1 id="邓晓霞是傻逼"><a href="#邓晓霞是傻逼" class="headerlink" title="邓晓霞是傻逼"></a>邓晓霞是傻逼</h1>]]></content>
  </entry>
  <entry>
    <title>bootstrap</title>
    <url>//</url>
    <content><![CDATA[<h1 id="bootstarp-django-ajax-echart"><a href="#bootstarp-django-ajax-echart" class="headerlink" title="bootstarp+django+ajax+echart"></a>bootstarp+django+ajax+echart</h1><h2 id="django的文件配置"><a href="#django的文件配置" class="headerlink" title="django的文件配置"></a>django的文件配置</h2><h4 id="django文件-的基础配置："><a href="#django文件-的基础配置：" class="headerlink" title="django文件 的基础配置："></a>django文件 的基础配置：</h4><p>首先是创建app;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python manage.py satrtapp ‘app名’</span><br></pre></td></tr></table></figure>



<p>settings.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Django settings for student_1 project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Generated by &#x27;django-admin startproject&#x27; using Django 4.0.6.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more information on this file, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/4.0/topics/settings/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For the full list of settings and their values, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/4.0/ref/settings/</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build paths inside the project like this: BASE_DIR / &#x27;subdir&#x27;.</span></span><br><span class="line">BASE_DIR = Path(__file__).resolve().parent.parent</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Quick-start development settings - unsuitable for production</span></span><br><span class="line"><span class="comment"># See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: keep the secret key used in production secret!</span></span><br><span class="line">SECRET_KEY = <span class="string">&#x27;django-insecure-bh!(b@9-j^*-grws#k)+3*(8s6&amp;a14$*rp-&amp;aj856udp35$kdh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: don&#x27;t run with debug turned on in production!</span></span><br><span class="line">DEBUG = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = []   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加app</span></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;api&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">ROOT_URLCONF = <span class="string">&#x27;student_1.urls&#x27;</span></span><br><span class="line"></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">         <span class="string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR, <span class="string">&quot;templates&quot;</span>)]   <span class="comment">#html文件</span></span><br><span class="line">        ,</span><br><span class="line">        <span class="string">&#x27;APP_DIRS&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;context_processors&#x27;</span>: [</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.debug&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.request&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">WSGI_APPLICATION = <span class="string">&#x27;student_1.wsgi.application&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Database</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.0/ref/settings/#databases</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库的连接</span></span><br><span class="line">DATABASES = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,  <span class="comment"># 默认</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;&#x27;</span>,  <span class="comment"># 连接的数据库  #一定要存在的数据库名</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;&#x27;</span>,  <span class="comment"># mysql的ip地址</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="number">3306</span>,  <span class="comment"># mysql的端口</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;&#x27;</span>,  <span class="comment"># mysql的用户名</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;&#x27;</span>  <span class="comment"># mysql的密码</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Password validation</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators</span></span><br><span class="line"></span><br><span class="line">AUTH_PASSWORD_VALIDATORS = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.MinimumLengthValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.CommonPasswordValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.NumericPasswordValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.0/topics/i18n/</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;en-us&#x27;</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;UTC&#x27;</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.0/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">&#x27;static/&#x27;</span>    <span class="comment">#配置静态文件</span></span><br><span class="line">STATICFILES_DIRS = ( os.path.join(<span class="string">&#x27;static&#x27;</span>), )</span><br><span class="line">STATIC_ROOT = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default primary key field type</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field</span></span><br><span class="line"></span><br><span class="line">DEFAULT_AUTO_FIELD = <span class="string">&#x27;django.db.models.BigAutoField&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>bootstrp文件形式引入</p>
<p>源码形式：</p>
<p><a href="https://getbootstrap.com/docs/3.4/getting-started/#download">入门 ·启动 (getbootstrap.com)</a></p>
<p>jquery引入：</p>
<p><a href="https://code.jquery.com/jquery-3.6.0.js">https://code.jquery.com/jquery-3.6.0.js</a></p>
<p>echart引入：</p>
<p><a href="https://github.com/apache/echarts/blob/5.3.3/dist/echarts.js">echarts/echarts.js at 5.3.3 · apache/echarts (github.com)</a></p>
<p>bootsrap的html文件的基本模板：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://img.puchedu.cn/uploads/1/253/712033084/456229750.jpg&quot;</span>&gt;</span></span><br><span class="line">      &#123;% block title %&#125;</span><br><span class="line"></span><br><span class="line">      &#123;% endblock  %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/static/bootstrap/css/bootstrap.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- IE10 viewport hack for Surface/desktop Windows 8 bug --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;../../assets/css/ie10-viewport-bug-workaround.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">    &#123;% block css %&#125;</span><br><span class="line"></span><br><span class="line">      &#123;% endblock  %&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Just for debugging purposes. Don&#x27;t actually copy these 2 lines! --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;&lt;script src=&quot;../../assets/js/ie8-responsive-file-warning.js&quot;&gt;&lt;/script&gt;&lt;![endif]--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../../assets/js/ie-emulation-modes-warning.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://oss.maxcdn.com/respond/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% endblock  %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap core JavaScript</span></span><br><span class="line"><span class="comment">    ================================================== --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Placed at the end of the document so the pages load faster --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">jQuery</span> || <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;script src=&quot;../../assets/js/vendor/jquery.min.js&quot;&gt;&lt;\/script&gt;&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/static/bootstrap/js/bootstrap.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- IE10 viewport hack for Surface/desktop Windows 8 bug --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../../assets/js/ie10-viewport-bug-workaround.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&#123;% block js %&#125;</span><br><span class="line">      &#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="echart-的动态数据显示："><a href="#echart-的动态数据显示：" class="headerlink" title="echart 的动态数据显示："></a>echart 的动态数据显示：</h4><p>例如：柱状图：</p>
<p>通过ajax请求接口，获得的json数据：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getCategoryPolice_1</span>(<span class="params"></span>)&#123;</span><br><span class="line">  url=<span class="string">&quot;http://localhost:8000/api/major&quot;</span>;#这里不要以这种形式url</span><br><span class="line"></span><br><span class="line">$.<span class="title function_">get</span>(url).<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> myChart = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;main_1&#x27;</span>));</span><br><span class="line">  myChart.<span class="title function_">setOption</span>(&#123;</span><br><span class="line">     <span class="attr">title</span>: &#123;</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&#x27;专业人数&#x27;</span>,</span><br><span class="line"><span class="attr">textStyle</span>:&#123;</span><br><span class="line">            <span class="attr">fontSize</span>:<span class="number">32</span></span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">tooltip</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">legend</span>: &#123;</span><br><span class="line"></span><br><span class="line">          <span class="attr">data</span>: [<span class="string">&#x27;专业&#x27;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">xAxis</span>: [&#123;</span><br><span class="line">          <span class="attr">axisLabel</span>:&#123;</span><br><span class="line">            <span class="attr">interval</span>:<span class="number">0</span>,</span><br><span class="line">            <span class="attr">textStyle</span>:&#123;</span><br><span class="line">            <span class="attr">fontSize</span>:<span class="number">14</span></span><br><span class="line">          &#125;,</span><br><span class="line">            <span class="attr">rotate</span>:<span class="number">30</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">data</span>: [<span class="string">&#x27;计算机科学与技术&#x27;</span>, <span class="string">&#x27;电子信息工程&#x27;</span>, <span class="string">&#x27;电子商务&#x27;</span>, <span class="string">&#x27;英语&#x27;</span>, <span class="string">&#x27;网络安全&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="attr">yAxis</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">series</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">barWidth</span>:<span class="number">30</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;人数&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: data[<span class="string">&quot;人数&quot;</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getCategoryPolice_1</span>();</span><br><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">getCategoryPolice_1</span>()&#125;, <span class="number">6</span>*<span class="number">1000</span>);    <span class="comment">// 间歇执行</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>生成验证码的功能：</p>
<p>check_code.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">verif_ycode</span>():</span><br><span class="line">    <span class="comment"># 引入绘图模块</span></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont</span><br><span class="line">    <span class="comment"># 引入随机函数模块</span></span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line">    <span class="comment"># 定义变量，用于画面的背景色、宽、高</span></span><br><span class="line">    bgcolor = (random.randrange(<span class="number">20</span>, <span class="number">100</span>), random.randrange(</span><br><span class="line">        <span class="number">20</span>, <span class="number">100</span>), random.randrange(<span class="number">20</span>, <span class="number">100</span>))</span><br><span class="line">    width = <span class="number">100</span></span><br><span class="line">    height = <span class="number">30</span></span><br><span class="line">    <span class="comment"># 创建画面对象</span></span><br><span class="line">    im = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (width, height), bgcolor)</span><br><span class="line">    <span class="comment"># 创建画笔对象</span></span><br><span class="line">    draw = ImageDraw.Draw(im)</span><br><span class="line">    <span class="comment"># 调用画笔的point()函数绘制噪点</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span>):</span><br><span class="line">        xy = (random.randrange(<span class="number">0</span>, width), random.randrange(<span class="number">0</span>, height))</span><br><span class="line">        fill = (random.randrange(<span class="number">0</span>, <span class="number">255</span>), <span class="number">255</span>, random.randrange(<span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line">        draw.point(xy, fill=fill)</span><br><span class="line">    <span class="comment"># 定义验证码的备选值</span></span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm&#x27;</span></span><br><span class="line">    <span class="comment"># 随机选取4个值作为验证码</span></span><br><span class="line">    rand_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">4</span>):</span><br><span class="line">        rand_str += <span class="built_in">str</span>[random.randrange(<span class="number">0</span>, <span class="built_in">len</span>(<span class="built_in">str</span>))]</span><br><span class="line">    font = ImageFont.truetype(<span class="string">r&#x27;/home/d/PycharmProjects/student/mitra.ttf&#x27;</span>, <span class="number">25</span>)</span><br><span class="line">    fontcolor1 = (<span class="number">255</span>, random.randrange(<span class="number">0</span>, <span class="number">255</span>), random.randrange(<span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line">    fontcolor2 = (<span class="number">255</span>, random.randrange(<span class="number">0</span>, <span class="number">255</span>), random.randrange(<span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line">    fontcolor3 = (<span class="number">255</span>, random.randrange(<span class="number">0</span>, <span class="number">255</span>), random.randrange(<span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line">    fontcolor4 = (<span class="number">255</span>, random.randrange(<span class="number">0</span>, <span class="number">255</span>), random.randrange(<span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line">    <span class="comment"># 绘制4个字</span></span><br><span class="line">    draw.text((<span class="number">5</span>, <span class="number">0</span>), rand_str[<span class="number">0</span>], fill=fontcolor1,font=font)</span><br><span class="line">    draw.text((<span class="number">25</span>, <span class="number">0</span>), rand_str[<span class="number">1</span>], fill=fontcolor2,font=font)</span><br><span class="line">    draw.text((<span class="number">50</span>, <span class="number">0</span>), rand_str[<span class="number">2</span>], fill=fontcolor3,font=font)</span><br><span class="line">    draw.text((<span class="number">75</span>, <span class="number">0</span>), rand_str[<span class="number">3</span>], fill=fontcolor4,font=font)</span><br><span class="line">    <span class="comment"># 释放画笔</span></span><br><span class="line">    <span class="keyword">del</span> draw</span><br><span class="line">    <span class="comment"># 存入session，用于做进一步验证</span></span><br><span class="line">    <span class="comment"># 内存文件操作</span></span><br><span class="line">    <span class="keyword">return</span> im,rand_str</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注意这里的mitra.ttf文件，这是必需的。</p>
<p>验证码的views视图：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">create_code_img</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;&quot;生成验证码&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    buf = io.BytesIO()</span><br><span class="line">    im, rand_str = check_code.verif_ycode()</span><br><span class="line">    <span class="comment"># 将图片保存在内存中，文件类型为png</span></span><br><span class="line">    im.save(buf, <span class="string">&#x27;png&#x27;</span>)</span><br><span class="line">    <span class="comment"># 将内存中的图片数据返回给客户端，MIME类型为图片png</span></span><br><span class="line">    request.session[<span class="string">&#x27;SB&#x27;</span>] = rand_str</span><br><span class="line">    <span class="built_in">print</span>(request.session[<span class="string">&#x27;SB&#x27;</span>]) <span class="comment">#将验证码放在session里面</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(buf.getvalue(), <span class="string">&#x27;image/png&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>views.py：</p>
<p>注册视图：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注册界面</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register_view</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;register/register.html&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">        password1 = request.POST.get(<span class="string">&quot;password1&quot;</span>)</span><br><span class="line">        password2 = request.POST.get(<span class="string">&quot;password2&quot;</span>)</span><br><span class="line">        email = request.POST.get(<span class="string">&quot;email&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> password1 != password2:</span><br><span class="line">            msg = &#123;</span><br><span class="line">                <span class="string">&#x27;code&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;两次密码不相同，请重新输入&#x27;</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;register/register.html&quot;</span>, msg)</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 如果密码输入正确，存到数据库中</span></span><br><span class="line">            msg_e = &#123;</span><br><span class="line">                <span class="string">&#x27;code&#x27;</span>: <span class="string">&#x27;404&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;msg_e&#x27;</span>: <span class="string">&#x27;注册失败，请重新尝试&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            msg_s = &#123;</span><br><span class="line">                <span class="string">&#x27;code&#x27;</span>: <span class="string">&#x27;200&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;msg_s&#x27;</span>: <span class="string">&#x27;注册成功&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            m = hashlib.md5()</span><br><span class="line">            m.update(password1.encode())</span><br><span class="line">            password1 = m.hexdigest()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                NewUser.objects.create(username=username, password=password1, email=email)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">&quot;register/register.html&quot;</span>, msg_e)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;register/register.html&quot;</span>, msg_s)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>前端页面：</p>
<p>判断注册的的状态：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if error %&#125;</span><br><span class="line">                  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                      <span class="title function_">alert</span>(<span class="string">&quot;两次输入的密码不相同&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">                  &#123;% elif msg_e %&#125;</span><br><span class="line">                  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                      <span class="title function_">alert</span>(<span class="string">&quot;注册失败，请重新尝试&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">                  &#123;% elif msg_s %&#125;</span><br><span class="line">                  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                      <span class="title function_">alert</span>(<span class="string">&quot;注册成功&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>登录的views视图（这个比较重要）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">index_view</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;&quot;网站的首页&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="comment">#首先先判断session是否存在：</span></span><br><span class="line">        <span class="keyword">if</span> request.session.get(<span class="string">&quot;username&quot;</span>) <span class="keyword">and</span> request.session.get(<span class="string">&quot;uid&quot;</span>):</span><br><span class="line">            <span class="comment">#如果在就判断用户登录</span></span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;index/index.html&quot;</span>, &#123;<span class="string">&#x27;msg_check_1&#x27;</span>: <span class="string">&#x27;用户已登录&#x27;</span>&#125;)</span><br><span class="line">        <span class="comment">#获取用户的cookies</span></span><br><span class="line">        c_username = request.COOKIES.get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">        c_uid = request.COOKIES.get(<span class="string">&quot;uid&quot;</span>)</span><br><span class="line">        <span class="comment">#如果cookies不存在就进行回写</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> c_username <span class="keyword">and</span> <span class="keyword">not</span> c_uid:</span><br><span class="line">            request.session[<span class="string">&#x27;username&#x27;</span>] = c_username</span><br><span class="line">            request.session[<span class="string">&#x27;uid&#x27;</span>] = c_uid</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;index/index.html&quot;</span>, &#123;<span class="string">&#x27;msg_check_1&#x27;</span>: <span class="string">&#x27;用户已登录&#x27;</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;index/index.html&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&quot;POST&quot;</span>:  <span class="comment"># 实现登录</span></span><br><span class="line">        username = request.POST.get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">        validateCode = request.POST.get(<span class="string">&quot;validateCode&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user = NewUser.objects.get(username=username)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;index/index.html&quot;</span>, &#123;<span class="string">&quot;error_user&quot;</span>: <span class="string">&quot;用户名或者密码错误&quot;</span>&#125;)</span><br><span class="line">        <span class="comment">#将密码转为MD5加密，与数据库里的密码进行匹配</span></span><br><span class="line">        m = hashlib.md5()</span><br><span class="line">        m.update(password.encode())</span><br><span class="line">        check_password = m.hexdigest()</span><br><span class="line">        <span class="keyword">if</span> check_password != user.password:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;index/index.html&quot;</span>, &#123;<span class="string">&quot;error_user&quot;</span>: <span class="string">&quot;用户名或者密码错误&quot;</span>&#125;)</span><br><span class="line">        <span class="comment"># 免登陆一天</span></span><br><span class="line"></span><br><span class="line">        request.session[<span class="string">&#x27;usernaem&#x27;</span>] = username</span><br><span class="line">        request.session[<span class="string">&#x27;uid&#x27;</span>] = user.<span class="built_in">id</span></span><br><span class="line"></span><br><span class="line">        check = request.session.get(<span class="string">&quot;SB&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> check != validateCode:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&#x27;index/index.html&#x27;</span>, &#123;<span class="string">&#x27;error_check_code&#x27;</span>: <span class="string">&#x27;验证码错误&#x27;</span>&#125;)</span><br><span class="line">        <span class="comment"># 判断用户是否点击了记住账户</span></span><br><span class="line">        <span class="comment">#如果用户点击了，就对cookies进行存在</span></span><br><span class="line">        resp = HttpResponseRedirect(<span class="string">&#x27;http://124.223.224.10:8000/user/index&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> request.POST:</span><br><span class="line">            resp.set_cookie(<span class="string">&#x27;username&#x27;</span>, username, max_age=<span class="number">3600</span> * <span class="number">24</span> * <span class="number">3</span>)</span><br><span class="line">            resp.set_cookie(<span class="string">&#x27;uid&#x27;</span>, user.<span class="built_in">id</span>, max_age=<span class="number">3600</span> * <span class="number">24</span> * <span class="number">3</span>)</span><br><span class="line">        <span class="keyword">return</span> resp</span><br></pre></td></tr></table></figure>

<p>每次点击一个页面，判断用户的登录状态，这里使用python中的装饰器</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查用户是否登录</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_login</span>(<span class="params">fn</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrap</span>(<span class="params">request, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.session <span class="keyword">or</span> <span class="string">&#x27;uid&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.session:</span><br><span class="line">            c_username = request.COOKIES.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">            c_uid = request.COOKIES.get(<span class="string">&quot;uid&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> c_username <span class="keyword">or</span> <span class="keyword">not</span> c_uid:</span><br><span class="line">                <span class="keyword">return</span> HttpResponseRedirect(<span class="string">&#x27;http://124.223.224.10:8000/index&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 回写session</span></span><br><span class="line">                c_username = request.session.get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">                c_uid = request.session.get(<span class="string">&quot;uid&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> fn(request, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrap</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这里对python中的装饰器进行</p>
<h4 id="PYTHON-中的装饰器"><a href="#PYTHON-中的装饰器" class="headerlink" title="PYTHON 中的装饰器"></a>PYTHON 中的装饰器</h4><h5 id="1-闭包"><a href="#1-闭包" class="headerlink" title="1.闭包"></a>1.闭包</h5><p>在下述的代码中，time_it通过闭包函数来增强传进来的函数，本质上是一个函数。</p>
<h5 id="2-语法糖"><a href="#2-语法糖" class="headerlink" title="2.语法糖"></a>2.语法糖</h5><p>语法糖（Syntactic sugar），也译为糖衣语法，是由英国<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338">计算机</a>科学家彼得·约翰·兰达（Peter J. Landin）发明的一个术语，指计算机语言中添加的某种语法，这种语法对语言的功能并没有影响，但是更方便程序员使用。通常来说使用语法糖能够增加程序的可读性，从而减少程序代码出错的机会。</p>
<h5 id="3-增强函数"><a href="#3-增强函数" class="headerlink" title="3.增强函数"></a>3.增强函数</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#闭包函数本身就是一个函数，传入值和传出值一般都为函数，用于将传进来的函数进行增强</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">time_it</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">*args,**kwargs</span>):</span><br><span class="line">        start = time.time()</span><br><span class="line">        func(*args,**kwargs)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;用时:&#123;&#125;秒&#x27;</span>.<span class="built_in">format</span>(end - start))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@time_it</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func1</span>(<span class="params">sb=<span class="number">250</span></span>):</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Func1 is running.&quot;</span>+<span class="built_in">str</span>(sb))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    func1(<span class="number">2123412</span>)</span><br></pre></td></tr></table></figure>

<p>运行结果如下：</p>
<p><img src="C:\Users\40120\Desktop\笔记\python学习笔记\运行结果\python_装饰器.jpg" alt="python_装饰器"></p>
<h5 id="如果将装饰器去掉"><a href="#如果将装饰器去掉" class="headerlink" title="如果将装饰器去掉"></a>如果将装饰器去掉</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">time_it</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">*args,**kwargs</span>):</span><br><span class="line">        start = time.time()</span><br><span class="line">        func(*args,**kwargs)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;用时:&#123;&#125;秒&#x27;</span>.<span class="built_in">format</span>(end - start))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func1</span>(<span class="params">sb=<span class="number">250</span></span>):</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Func1 is running.&quot;</span>+<span class="built_in">str</span>(sb))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sb=time_it(func1)</span><br><span class="line">    sb()</span><br></pre></td></tr></table></figure>

<p>运行结果如下：</p>
<p><img src="C:\Users\40120\Desktop\笔记\python学习笔记\运行结果\python_闭包.jpg" alt="python_闭包"></p>
<p>通过观察我们可以发现，两次的运行结果一样，其实，装饰器本质上就是对函数闭包的语法糖，</p>
<hr>
<p>注意：装饰器只有在调用的时候才会增强，且只增强一次。</p>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    func1(<span class="number">2123412</span>)</span><br><span class="line">    func1(<span class="number">2123412</span>)</span><br><span class="line">    func1(<span class="number">2123412</span>)</span><br></pre></td></tr></table></figure>

<p>这里调用了很多次func1，但实际上只增强了一次，后面的func1调用的其实是已经增强过的函数的，不会继续增强。</p>
<p>数据库的配置，例如：</p>
<p>models.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewUser</span>(models.Model):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;&quot;新用户注册表&quot;&quot;&quot;</span></span><br><span class="line">    username = models.CharField(<span class="string">&quot;username&quot;</span>, max_length=<span class="number">30</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment">#这里的unique对username进行限制，避免相同用户名</span></span><br><span class="line">    password = models.CharField(<span class="string">&quot;password&quot;</span>, max_length=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">    email = models.CharField(<span class="string">&quot;email&quot;</span>, max_length=<span class="number">32</span>)</span><br><span class="line">    created_time = models.DateTimeField(<span class="string">&quot;creat_time&quot;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    updated_time = models.DateTimeField(<span class="string">&quot;updated_time&quot;</span>, auto_now=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;user %s&#x27;</span> % self.username</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>对数据库进行操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">           AddUser.objects.create(student_name=student_name, student_id=student_id, student_major=major,</span><br><span class="line">                                  student_sex=student_sex,student_age=student_age, english=english, math=math, pe=pe)</span><br><span class="line">       <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">           <span class="built_in">print</span>(e)</span><br><span class="line">           <span class="keyword">return</span> render(request, <span class="string">&quot;add_user/add_user.html&quot;</span>, &#123;<span class="string">&#x27;msg_error_add&#x27;</span>: <span class="string">&#x27;提交失败&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>

<p>注意：在进行数据库操作时，使用try语句对错误进行判断。</p>
<p>对数据库进行数据库迁移：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python manage.py makemigrations</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure>

<p>前者是将<a href="https://so.csdn.net/so/search?q=model&spm=1001.2101.3001.7020">model</a>层转为迁移文件migration，后者将新版本的迁移文件执行，更新数据库。</p>
<p>大概的技术点已经讲了。</p>
<p>下面来进行服务器简单的配置（能跑的那种，不涉及实际部署）</p>
<h3 id="1-所需条件"><a href="#1-所需条件" class="headerlink" title="1.所需条件"></a>1.所需条件</h3><p>1.生成所需项目的依赖包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure>

<p>2.系统使用centos7系统</p>
<p>首先对软件进行升级。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y update &amp;&amp; yum -y upgrade</span><br></pre></td></tr></table></figure>

<p>其次就是对pip进行升级。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>

<h3 id="2-运行项目"><a href="#2-运行项目" class="headerlink" title="2.运行项目"></a>2.运行项目</h3><p>1.安装依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install -requirements.txt</span><br></pre></td></tr></table></figure>

<p>2.环境配置</p>
<p>这里必须先对环境进行配置，否则无法安装mysqlclient</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install python3-devel</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install mysql-devel</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install mysqlclient</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>4.运行项目</p>
<p>django使用普通的启动方式是不会加载静态资源的：</p>
<p>只需要在命令后面加上 <strong>–insecure</strong>即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo python3 manage.py runserver 0.0.0.0:8000 --insecure</span><br></pre></td></tr></table></figure>

<h2 id="宝塔部署django项目"><a href="#宝塔部署django项目" class="headerlink" title="宝塔部署django项目"></a>宝塔部署django项目</h2><p>uwsgi.ini</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#添加配置选择</span><br><span class="line">[uwsgi]</span><br><span class="line">#配置和nginx连接的socket连接</span><br><span class="line">socket=127.0.0.1:8080</span><br><span class="line">#配置项目路径，项目的所在目录</span><br><span class="line">chdir=/www/wwwroot/boringbolg.xyz/</span><br><span class="line">#配置wsgi接口模块文件路径,也就是wsgi.py这个文件所在的目录</span><br><span class="line">wsgi-file=mainApp/wsgi.py</span><br><span class="line">#配置启动的进程数</span><br><span class="line">processes=4</span><br><span class="line">#配置每个进程的线程数</span><br><span class="line">threads=2</span><br><span class="line">#配置启动管理主进程</span><br><span class="line">master=True</span><br><span class="line">#配置存放主进程的进程号文件</span><br><span class="line">pidfile=uwsgi.pid</span><br><span class="line">#配置dump日志记录</span><br><span class="line">daemonize=uwsgi.log </span><br></pre></td></tr></table></figure>

<p>nginx配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  include uwsgi_params;</span><br><span class="line">  uwsgi_pass 127.0.0.1:8080;  #端口要和uwsgi里配置的一样</span><br><span class="line">  uwsgi_param UWSGI_SCRIPT mainApp.wsgi;  #wsgi.py所在的目录名+.wsgi</span><br><span class="line">  uwsgi_param UWSGI_CHDIR /www/wwwroot/boringbolg.xyz/; #项目路径</span><br><span class="line">&#125;</span><br><span class="line">location /static/ &#123;</span><br><span class="line">  alias /www/wwwroot/boringbolg.xyz/static/; #静态资源路径</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>django</tag>
      </tags>
  </entry>
</search>
